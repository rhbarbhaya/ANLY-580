setwd("D:/Personal Documents/Harrisburg Documents/ANLY 580/Lecture 8")
data <- read.csv("D:/Personal Documents/Harrisburg Documents/ANLY 580/Lecture 8/assignment_cfabasics.csv")
View(data)
knitr::opts_chunk$set(echo = TRUE)
library(lavaan)
library(semPlot)
data <- read.csv("assignment_cfabasics.csv")
library(lavaan)
library(semPlot)
data <- read.csv("assignment_cfabasics.csv")
cat('q',i)
for (i in seq(30)){
cat('q',i)
}
print('q',i)
for (i in seq(30)){
print('q',i)
}
for (i in seq(30)){
cat(paste0('q',i))
}
for (i in seq(30)){
cat(paste0('q',i,'+'))
}
# for (i in seq(30)){
#   cat(paste0('q',i,'+'))
# }
model.one = '
computer =~ q1+q2+q3+q4+q5+q6+q7+q8+q9+q10+q11+q12+q13+q14+q15+q16+q17+q18+q19+q20+q21+q22+q23+q24+q25+q26+q27+q28+q29+q30
'
# - Computer Familiarity: Items 3, 13-14, 16, 20-23, 27, and 30.
# - Computer Attitudes: Items 1-2, 4-5, 8, 11, 18-19, and 28-29.
# - Computer Aversion: Items 6-7, 9-10, 12, 15, 17, and 24-26.
model.three = '
familiarity =~ q3 + q13 + q14 + q16 + q20 + q21 + q22 + q23 + q27 + q30
attitudes =~ q1 + q2 + q4 + q5 + q8 + q11 + q18 + q19 + q28 + q29
aversion =~ q6 + q7 + q9 + q10 + q12 + q15 + q17 + q24 + q25 + q26
'
model.one.fit = cfa(model.one, data = data)
model.three.fit = cfa(model.three, data = data)
summary(model.one.fit, standardize = T, fit.measures = T, rsquare = T)
semPaths(model.one.fit, whatLabels = 'std', what = 'std', layout = 'tree', edge.color = 'blue', edge.label.cex = 1)
semPaths(model.three.fit, whatLabels = 'std', what = 'std', layout = 'tree', edge.color = 'orange', edge.label.cex = 1)
summary(model.three.fit, standardize = T, fit.measures = T, rsquare = T)
anova(model.one.fit, model.three.fit)
fitmeasures(model.one.fit, c('aic', 'ecvi'))
fitmeasures(model.three.fit, c('aic','ecvi'))
anova(model.one.fit, model.three.fit)
library(broom)
library(lavaan)
library(semPlot)
library(broom)
data <- read.csv("assignment_cfabasics.csv")
library(lavaan)
library(semPlot)
library(broom)
data <- read.csv("assignment_cfabasics.csv")
tidy(model.one.fit)
tidy(model.three.fit)
modindices(model.one.fit, sort. = T)
summary(model.one.fit, standardize = T, fit.measures = T, rsquare = T)
summary(model.three.fit, standardize = T, fit.measures = T, rsquare = T)
summary(model.one.fit, standardize = T, fit.measures = T, rsquare = T)
summary(model.three.fit, standardize = T, fit.measures = T, rsquare = T)
correl = residuals(model.three.fit, type = 'cor')
View(correl$cov)
